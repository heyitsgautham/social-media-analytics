name: CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app
          POSTGRES_DB: testdb
        options: >-
          --health-cmd="pg_isready -U app -d testdb"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    env:
      DATABASE_URL: postgresql+psycopg2://app:app@postgres:5432/testdb
      PYTHONPATH: .

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Wait for Postgres to be resolvable and ready
        shell: bash
        run: |
          set -e
          echo "Checking DNS for 'postgres'..."
          for i in {1..30}; do
            getent hosts postgres && break
            echo "DNS not ready... ($i)"
            sleep 2
          done
          echo "Waiting for pg_isready..."
          for i in {1..30}; do
            if pg_isready -h postgres -p 5432 -U app -d testdb; then
              break
            fi
            echo "pg_isready not ready... ($i)"
            sleep 2
          done
          echo "Python-level connect check via psycopg2..."
          python - <<'PY'
            import time, psycopg2, sys
            dsn = "postgresql://app:app@postgres:5432/testdb"
            for i in range(20):
                try:
                    conn = psycopg2.connect(dsn, timeout=5)
                    conn.close()
                    print("Python connect OK")
                    sys.exit(0)
                except Exception as e:
                    print(f"Connect failed ({i+1}): {e}")
                    time.sleep(2)
            print("ERROR: Could not connect to Postgres via psycopg2")
            sys.exit(1)
            PY

      - name: Apply migrations
        run: alembic upgrade head

      - name: Run tests
        run: pytest -q
