"""create core tables and indexes

Revision ID: c9768f99c155
Revises: 
Create Date: 2025-09-20 11:12:25.128710

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c9768f99c155'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('hashtags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('handle', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_handle'), 'users', ['handle'], unique=True)
    op.create_table('engagements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('target_type', sa.Enum('post', 'comment', name='target_type'), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=False),
    sa.Column('kind', sa.Enum('like', 'share', 'view', 'bookmark', name='engagement_kind'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_engagements_target', 'engagements', ['target_type', 'target_id', 'created_at'], unique=False)
    op.create_index('idx_engagements_user', 'engagements', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_engagements_target_id'), 'engagements', ['target_id'], unique=False)
    op.create_index(op.f('ix_engagements_user_id'), 'engagements', ['user_id'], unique=False)
    op.create_table('hashtag_cooccurrence',
    sa.Column('hashtag_a', sa.Integer(), nullable=False),
    sa.Column('hashtag_b', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.CheckConstraint('hashtag_a < hashtag_b', name='ck_co_pair_order'),
    sa.ForeignKeyConstraint(['hashtag_a'], ['hashtags.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['hashtag_b'], ['hashtags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('hashtag_a', 'hashtag_b')
    )
    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_posts_created', 'posts', [sa.literal_column('created_at DESC')], unique=False)
    op.create_index(op.f('ix_posts_user_id'), 'posts', ['user_id'], unique=False)
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('upvotes', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['comments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_comments_parent', 'comments', ['parent_id'], unique=False)
    op.create_index(op.f('ix_comments_parent_id'), 'comments', ['parent_id'], unique=False)
    op.create_index(op.f('ix_comments_post_id'), 'comments', ['post_id'], unique=False)
    op.create_index(op.f('ix_comments_user_id'), 'comments', ['user_id'], unique=False)
    op.create_table('post_hashtags',
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('hashtag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hashtag_id'], ['hashtags.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('post_id', 'hashtag_id')
    )
    op.create_index('idx_posthashtags_post', 'post_hashtags', ['post_id'], unique=False)
    op.create_index('idx_posthashtags_tag_post', 'post_hashtags', ['hashtag_id', 'post_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_posthashtags_tag_post', table_name='post_hashtags')
    op.drop_index('idx_posthashtags_post', table_name='post_hashtags')
    op.drop_table('post_hashtags')
    op.drop_index(op.f('ix_comments_user_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_post_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_parent_id'), table_name='comments')
    op.drop_index('idx_comments_parent', table_name='comments')
    op.drop_table('comments')
    op.drop_index(op.f('ix_posts_user_id'), table_name='posts')
    op.drop_index('idx_posts_created', table_name='posts')
    op.drop_table('posts')
    op.drop_table('hashtag_cooccurrence')
    op.drop_index(op.f('ix_engagements_user_id'), table_name='engagements')
    op.drop_index(op.f('ix_engagements_target_id'), table_name='engagements')
    op.drop_index('idx_engagements_user', table_name='engagements')
    op.drop_index('idx_engagements_target', table_name='engagements')
    op.drop_table('engagements')
    op.drop_index(op.f('ix_users_handle'), table_name='users')
    op.drop_table('users')
    op.drop_table('hashtags')
    # ### end Alembic commands ###
